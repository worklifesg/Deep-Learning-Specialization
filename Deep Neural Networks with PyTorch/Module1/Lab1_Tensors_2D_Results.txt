2D List <--> 2D Tensor: 

tensor([[11, 12, 13],
        [21, 22, 23],
        [31, 32, 33]])


Basic elements: 

The dimension of 2D tensor:  2
The shape of 2D tensor:  torch.Size([3, 3])
The size of 2D tensor:  torch.Size([3, 3])
The no. of elements of 2D tensor:  9


Numpy --> Tensor: 

The numpy after converting:
 [[11 12 13]
 [21 22 23]
 [31 32 33]]
The type of numpy:  int64
-------------------------------------------
The tensor from numpy:
 tensor([[11, 12, 13],
        [21, 22, 23],
        [31, 32, 33]])
The type of new tensor from numpy:  torch.int64


Pandas DF --> Tensor: 

Pandas to numpy:
 [[11 12]
 [21 22]
 [31 32]]
Type before conversion:  int64
-------------------------------------------
The tensor after converting:
 tensor([[11, 12],
        [21, 22],
        [31, 32]])
The type of new tensor after converting:  torch.int64


Indexing: 

Value on 2nd row and 3rd column:  tensor(23)
Value on 2nd row and 3rd column:  tensor(23)
-------------------------------------------
Indexing and Slicing: 

Value on 1st row and first two columns:  tensor([11, 12])
Value on 1st row and first two columns:  tensor([11, 12])


Operations: 

Adding X and Y gives:
 tensor([[3, 1],
        [1, 3]])
Scalar Mutiplication:
 tensor([[4, 2],
        [2, 4]])
Element Wise Product:
 tensor([[2, 0],
        [0, 2]])
Matrix Multiplication Xnew,Ynew:
 tensor([[0, 2],
        [0, 2]])


